#!/bin/bash

. /usr/local/cbmon/etc/config
. /usr/local/cbmon/bin/logging

options="ac:Dd:hz:"

usage() {
	msg=""
	if [ -n "$1" ]; then
		msg="${1}\n"
	fi

	cat << EOMSG
usage: loader { -a | -c CLUSTER_ID }
  -a      Load all enabled clusters
  -c      Specify single cluster id to load, overrides config (default ${CLUSTER_ID})
          May be a quoted, space delimited list of cluster ids
             Example: "1 5 23"
  -d      Delay in seconds between iterations (default ${DELAY})
  -D      Turn on debug output
  -z      Analyze frequency in interations (default ${ANALYZE_FREQ})
  -h      help

Note:
  If cluster id list is long, reduce load delay (-d secs) to ensure metrics
  data is fresh. Alternatively, run multiple independent loader's where each
  executes for a single cluster id.
EOMSG
	exit 1
}


cluster_cmd="echo ${CLUSTER_ID}"

while getopts $options opt
do
	case "$opt" in
	a)
		cluster_cmd="psql -qAt -d $PGDATABASE -U $PGUSER -p $PGPORT -c 'SELECT id FROM public.clusters WHERE enabled ORDER BY id'"
		;;
	c)
		if [ "$( echo "${OPTARG}" | sed -e 's/[[:space:]]\{1,\}/,/g' )" = "${OPTARG}" ]; then
			# Single cluster id
			cluster_ids="${OPTARG}"
			logdir=$( dirname "${LOGFILE}" )
			LOGFILE="${logdir}/loader-cluster${OPTARG}.log"
		else
			# many cluster id's
			cluster_ids=$( echo "${OPTARG}" | sed -e 's/[[:space:]]\{1,\}/ /g' )
		fi

		cluster_cmd="echo $cluster_ids"
		;;
	D)
		DEBUG=1
		;;
	d)
		LOAD_DELAY="${OPTARG}"
		;;
	h)
		usage ""
		;;
	z)
		ANALYZE_FREQ="${OPTARG}"
		;;
	*)
		usage "Unknown flag -${opt}"
		;;
	esac
done


loadall="false"
backoff_delay=$(( $LOAD_DELAY * 10 ))
i=$(( ${ANALYZE_FREQ} + 1 ))

logdebug "LOGFILE      = $LOGFILE"
logdebug "cluster_ids  = $cluster_ids"
logdebug "LOAD_DELAY   = $LOAD_DELAY"
logdebug "ANALYZE_FREQ = $ANALYZE_FREQ"


while [ 1 -eq 1 ]; do
	logdebug "iteration $i"
	analyze="false"
	if [ $i -gt ${ANALYZE_FREQ} ]; then
		if [ $i -eq $(( $ANALYZE_FREQ + 1 )) ]; then
			loginfo "First run on start, loading all"
			loadall="true"
		fi
		analyze="true"
		i=1
	fi

	for cluster_id in $( $cluster_cmd )
	do
		loginfo "Loading cluster_id ${cluster_id}"
		psql -qAt -d $PGDATABASE -U $PGUSER -p $PGPORT -c "CALL public.load( ${cluster_id}, ${analyze}, ${loadall} )" >> $LOGFILE 2>&1

		loadall="false"
	done

	logdebug "waiting $LOAD_DELAY"
	sleep $LOAD_DELAY
	i=$(( $i + 1 ))
done
